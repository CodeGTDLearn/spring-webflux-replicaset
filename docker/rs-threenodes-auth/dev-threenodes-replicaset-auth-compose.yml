version: "3.8"

x-common-variables:
  &env-vars
  PORT_API: 8080
  PORT_DEBUG: 5005

volumes:
  api_vol:
  keyfile:

networks:
  api_net:

services:
  mongo1:
    container_name: mongo1
    image: mongo:4.4.4
    restart: always
    command: mongod --replSet docker-rs --port 9042 --config /etc/mongod.conf --keyFile /auth/file.key --bind_ip_all
    ports:
      - "9042:9042"
    networks:
      - api_net
    volumes:
      - ~/mongors/data1:/data/db
      - ./init.db/:/docker-entrypoint-initdb.d/
      - keyfile:/auth/
      - ./conf.db/mongod.conf:/etc/mongod.conf
    env_file:
      - /env/dev-threenodes-replicaset-auth.env
    entrypoint: ["bash", "/docker-entrypoint-initdb.d/bootstrap.sh"]
    healthcheck:
      test: echo 'rs.status().ok' | mongo admin --port 9042 -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet | grep 1
      interval: 30s
      start_period: 60s

  mongo2:
    container_name: mongo2
    image: mongo:4.4.4
    restart: always
    command: mongod --replSet docker-rs --port 9142 --config /etc/mongod.conf --keyFile /auth/file.key --bind_ip_all
    ports:
      - "9142:9142"
    networks:
      - api_net
    volumes:
      - ~/mongors/data2:/data/db
      - keyfile:/auth/
      - ./conf.db/mongod.conf:/etc/mongod.conf
    depends_on:
      - mongo1

  mongo3:
    container_name: mongo3
    image: mongo:4.4.4
    restart: always
    ports:
      - "9242:9242"
    command: mongod --replSet docker-rs --port 9242 --config /etc/mongod.conf --keyFile /auth/file.key --bind_ip_all
    networks:
      - api_net
    volumes:
      - ~/mongors/data3:/data/db
      - keyfile:/auth/
      - ./conf.db/mongod.conf:/etc/mongod.conf
    depends_on:
      - mongo2

  replicaset-setup:
    container_name: rs-setup
    image: mongo:4.4.4
    restart: on-failure
    command: bash -c "
      sleep 20 &&
      chmod +x /scripts/rs-setup.sh &&
      scripts/rs-setup.sh"
    networks:
      - api_net
    volumes:
      - ./conf.rs/rs-setup.sh:/scripts/rs-setup.sh
    depends_on:
      - mongo3
    env_file:
      - ./env/dev-threenodes-replicaset-auth.env

  api3nodesauth:
    container_name: api3nodesauth
    image: pauloportfolio/api
    build:
      context: ../..
      dockerfile: ./docker/rs-threenodes-auth/Dockerfile
      args:
        JAR_FILE: target/*.jar
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - api_vol:/data/db
    networks:
      - api_net
    depends_on:
      - replicaset-setup
    env_file:
      - ./env/dev-threenodes-replicaset-auth.env
    environment:
      <<: *env-vars
      DEBUG_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m