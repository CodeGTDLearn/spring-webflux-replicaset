version: "3.4"

#secrets:
#  rs_admin:
#    file: ./secrets/rs_admin.txt
#  rs_user:
#    file: ./secrets/rs_user.txt
#  rs_pass:
#    file: ./secrets/rs_pass.txt

x-common-variables:
  &env-vars
  PORT_API: 8080
  RS_ROOT_URI: mongo1:9042,mongo2:9142,mongo3:9242
  RS_AUTH: admin
  RS_USERNAME: admin
  RS_PASSWORD: admin

volumes:
  api_vol:

networks:
  api_net:

services:
  mongo1:
    container_name: mongo1
    image: mongo:4.4.4
    restart: always
    command: mongod --replSet docker-rs --port 9042
    ports:
      - "9042:9042"
    networks:
      - api_net
    volumes:
      - ~/mongors/data1:/data/db
    depends_on:
      - mongo2
#    healthcheck:
#      test: [ 'CMD', 'mongo', '-u', 'prod-rs', '-p', 'prod-rs', '--port', '9042' ]
###    test: mongo --user=$$RS_USERNAME --password=$$RS_PASSWORD --port=9042
#      test: echo 'db.runCommand("ping").ok' | mongo mongo1:9042/test --quiet
#      interval: 20s
#      timeout: 10s
#      start_period: 5s
#      retries: 5

  mongo2:
    container_name: mongo2
    image: mongo:4.4.4
    restart: always
    command: mongod --replSet docker-rs --port 9142
    ports:
      - "9142:9142"
    networks:
      - api_net
    volumes:
      - ~/mongors/data2:/data/db
    depends_on:
      - mongo3

  mongo3:
    container_name: mongo3
    image: mongo:4.4.4
    restart: always
    ports:
      - "9242:9242"
    command: mongod --replSet docker-rs --port 9242
    networks:
      - api_net
    volumes:
      - ~/mongors/data3:/data/db

  replicaset-setup:
    container_name: replicaset-setup
    image: mongo:4.4.4
    restart: on-failure
    command: bash -c "
      sleep 20 &&
      chmod +x /scripts/setup.sh &&
      scripts/setup.sh"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - api_net
    volumes:
      - ./rs-script/setup.sh:/scripts/setup.sh

  api:
    container_name: api
    image: pauloportfolio/api
    build:
      context: ../
      dockerfile: docker/Dockerfile
      args:
        JAR_FILE: target/*.jar
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - api_vol:/data/db
    networks:
      - api_net
    depends_on:
      - replicaset-setup
#    secrets:
#      - rs_user
#      - rs_pass
#      - rs_admin
    env_file:
      - ./envs/env_prod_replicaset.env
    environment:
      PORT_DEBUG: 5005
      <<: *env-vars
      DEBUG_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m
#      RS_AUTH_FILE: /run/secrets/rs_admin
#      RS_USERNAME_FILE: /run/secrets/rs_user
#      RS_PASSWORD_FILE: /run/secrets/rs_pass

#x-common-variables:
#  &env-vars
#  PORT_API: 8080
#  PORT_DEBUG: 5005
#  RS_ROOT_URI: mongo1:9042,mongo2:9142,mongo3:9242
#  RS_ROOT_URI: mongo1:9042
#  RS_AUTH: admin
#  RS_USERNAME: admin
#  RS_PASSWORD: admin